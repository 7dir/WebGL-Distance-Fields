// Jump flooding algorithm for Euclidean distance transform, according to Danielsson (1980) and Guodong Rong (2007).
// Implementation by Stefan Gustavson 2010. This code is in the public domain.

// This code represents one iteration of the flood filling.
// You need to run it multiple times with different step lengths to perform a full distance transformation.

varying vec2 vUv;
varying float stepu;
varying float stepv;

uniform float step;
uniform float texw;
uniform float texh;

void main()
{
	// Saves a division in the fragment shader
	stepu = step / texw;
	stepv = step / texh;
	
	vUv = uv;	
	gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}